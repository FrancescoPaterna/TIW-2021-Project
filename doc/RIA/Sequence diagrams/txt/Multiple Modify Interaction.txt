frame Multiple Modify Interaction
participant HomePro.html & professor.js
participant sessionEnrolls
participant UpdateMultipleScore (Serlvet)#lightblue
participant GetCourseDatePro (Servlet) #lightblue
participant EnrollsDAO #lightblue
participant ExamDateDAO #lightblue
participant Session #lightblue
participant GoodScore #lightblue

HomePro.html & professor.js ->sessionEnrolls: multiple_modify.eventHandler("click")
activate sessionEnrolls
sessionEnrolls->sessionEnrolls: sessionEnrolls.resetModal()
sessionEnrolls->sessionEnrolls: sessionEnrolls.modal.style.display = "block";
sessionEnrolls->sessionEnrolls: 			sessionEnrolls.multipleModalForm.style.visibility = "visible";

deactivate sessionEnrolls

HomePro.html & professor.js ->sessionEnrolls: select ["IDStudent"]  in form
activate sessionEnrolls
HomePro.html & professor.js ->sessionEnrolls: select ["score"] in form
HomePro.html & professor.js ->sessionEnrolls: update.eventHandler("click")


sessionEnrolls ->>UpdateMultipleScore (Serlvet): AJAX JSON POST (List<id_stud>, exam_date_id, score)
deactivate sessionEnrolls
activate UpdateMultipleScore (Serlvet)

UpdateMultipleScore (Serlvet) ->GoodScore: CheckValidScore(score)

deactivate UpdateMultipleScore (Serlvet)
activate GoodScore
alt invalid score
GoodScore -->UpdateMultipleScore (Serlvet): false
deactivate GoodScore
activate UpdateMultipleScore (Serlvet)
UpdateMultipleScore (Serlvet) -->>sessionEnrolls: Http Status 400 "Not Valid Score"
deactivate UpdateMultipleScore (Serlvet)

activate sessionEnrolls
sessionEnrolls->sessionEnrolls:show error message
deactivate sessionEnrolls
end

alt valid score
activate GoodScore
GoodScore -->UpdateMultipleScore (Serlvet): true
deactivate GoodScore
activate UpdateMultipleScore (Serlvet)
UpdateMultipleScore (Serlvet)->ExamDateDAO:CheckExamDateByProf(user.getId(), exam_date_id)
deactivate UpdateMultipleScore (Serlvet)


alt Attempt Attack, Exam does not belong to the professor


activate ExamDateDAO
ExamDateDAO -->UpdateMultipleScore (Serlvet): false
deactivate ExamDateDAO
activate UpdateMultipleScore (Serlvet)
UpdateMultipleScore (Serlvet) -->>sessionEnrolls: Http Status 403 "UNAUTHORIZED MODIFY"
activate sessionEnrolls

UpdateMultipleScore (Serlvet)->Session: invalidate()
deactivate UpdateMultipleScore (Serlvet)
sessionEnrolls->sessionEnrolls:show error message
deactivate sessionEnrolls
end 


alt Exam Belong to the Professor
activate ExamDateDAO
ExamDateDAO -->UpdateMultipleScore (Serlvet): true
deactivate ExamDateDAO
activate UpdateMultipleScore (Serlvet)
loop for each id_stud in List<id_stud>
UpdateMultipleScore (Serlvet) ->EnrollsDAO:enrollsdao.insertMark(exam_date_id, id_stud, score)
deactivate UpdateMultipleScore (Serlvet)


alt Attempted to Modify a score not in INSERTED or NOT_INSERED state
activate EnrollsDAO
EnrollsDAO-->UpdateMultipleScore (Serlvet): 0
deactivate EnrollsDAO
activate UpdateMultipleScore (Serlvet)

UpdateMultipleScore (Serlvet) -->>sessionEnrolls: Http Status 403 "Attempt to access a resource not owned by you!"
activate sessionEnrolls
sessionEnrolls->sessionEnrolls:show error message
deactivate sessionEnrolls
UpdateMultipleScore (Serlvet)->Session: invalidate()
deactivate UpdateMultipleScore (Serlvet)

activate EnrollsDAO
EnrollsDAO-->UpdateMultipleScore (Serlvet): 1
deactivate EnrollsDAO
activate UpdateMultipleScore (Serlvet)
end
end
alt Correct Multiple Modify Request
UpdateMultipleScore (Serlvet)->>sessionEnrolls: Http Status 200
deactivate UpdateMultipleScore (Serlvet)
activate sessionEnrolls
sessionEnrolls->sessionEnrolls:resetModal()
sessionEnrolls->sessionEnrolls:resetMain()
sessionEnrolls->sessionEnrolls:sessionEnrolls.show(sessionEnrolls.current_exam)
deactivate sessionEnrolls
end
end
end